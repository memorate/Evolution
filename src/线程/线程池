###线程：
　1）线程，是程序执行的最小单元。  
　2）标准的线程由线程ID、当前指令指针、寄存器集合和堆栈组成。  
　3）线程是进程中的一个实体，是被系统独立调度和分配的基本单位。  
　4）线程自己不拥有系统资源，只拥有一点在运行中必不可少的资源，但它可与同属一个进程的其他线程共享进程的全部资源。  
　5）一个线程可以创建和撤销另一个线程，同一进程中的多个线程之间可以并发执行。  
　注意(进程与线程的区别)：
  
###Java中线程的三种基本用法
　1）自定义一个类，去继承Thread类，重写run方法。  
　2）自定义一个类，去实现Runnable接口，重写run方法。  
　3）自定义一个类，去实现Callable接口，重写call方法。  
　注意：Runnable中run方法无返回值且不能抛出异常，Callable中的call方法可返回一个Future对象且可以抛出异常。

###并行和并发  
#####1）并发(Concurrency)：  
　　 a.多个任务可在同一时间段内启动、运行和完成。  
　　 b.在宏观上并发看起来是同时进行，但在微观上(CPU中)是顺序执行的。  
　　 c.并发实质是一个(也可以是多个)物理CPU在多个线程间的复用，但在同一CPU中一个CPU时间片段上只能有一个线程在运行。  
　　 d.由于CPU运行速度快，使得多个任务在极短时间内同时完成，这一现象看起来像是任务的并行运行，但实际上在极小时间粒度(ns)上来看这些任务还是顺序执行的。
#####２）并行(Parallelism)：  
　　 a.并行是真正意义上的多个任务(线程)在宏观、微观中同一时刻运行。  
　　 b.并行只能发生在多核CPU的计算机上。  
　　 c.并行实质上是多个任务分别在多个CPU中在同一时间段内同时运行。  
